
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CADENA CADENA_TEXTO COMPARACION FIN ID IGUAL INICIO LLAVEDER LLAVEIZQ NUMERO PARENDER PARENIZQ PROCESO PUNTOYCOMA SI VERprograma : INICIO lista_declaraciones FIN PUNTOYCOMAlista_declaraciones : lista_declaraciones declaracion\n                           | declaraciondeclaracion : declaracion_variable\n                   | sentenciadeclaracion_variable : CADENA ID IGUAL valor PUNTOYCOMAsentencia : PROCESO PUNTOYCOMA\n                 | sentencia_si\n                 | sentencia_versentencia_si : SI PARENIZQ condicion PARENDER LLAVEIZQ lista_declaraciones LLAVEDERcondicion : expresion COMPARACION expresionsentencia_ver : VER CADENA_TEXTO PUNTOYCOMAvalor : CADENA_TEXTO\n             | NUMEROexpresion : ID\n                 | NUMERO\n                 | CADENA_TEXTO'
    
_lr_action_items = {'INICIO':([0,],[2,]),'$end':([1,19,],[0,-1,]),'CADENA':([2,3,4,5,6,9,10,14,16,26,32,33,35,36,],[7,7,-3,-4,-5,-8,-9,-2,-7,-12,-6,7,7,-10,]),'PROCESO':([2,3,4,5,6,9,10,14,16,26,32,33,35,36,],[8,8,-3,-4,-5,-8,-9,-2,-7,-12,-6,8,8,-10,]),'SI':([2,3,4,5,6,9,10,14,16,26,32,33,35,36,],[11,11,-3,-4,-5,-8,-9,-2,-7,-12,-6,11,11,-10,]),'VER':([2,3,4,5,6,9,10,14,16,26,32,33,35,36,],[12,12,-3,-4,-5,-8,-9,-2,-7,-12,-6,12,12,-10,]),'FIN':([3,4,5,6,9,10,14,16,26,32,36,],[13,-3,-4,-5,-8,-9,-2,-7,-12,-6,-10,]),'LLAVEDER':([4,5,6,9,10,14,16,26,32,35,36,],[-3,-4,-5,-8,-9,-2,-7,-12,-6,36,-10,]),'ID':([7,17,31,],[15,23,23,]),'PUNTOYCOMA':([8,13,18,27,28,29,],[16,19,26,32,-13,-14,]),'PARENIZQ':([11,],[17,]),'CADENA_TEXTO':([12,17,20,31,],[18,25,28,25,]),'IGUAL':([15,],[20,]),'NUMERO':([17,20,31,],[24,29,24,]),'PARENDER':([21,23,24,25,34,],[30,-15,-16,-17,-11,]),'COMPARACION':([22,23,24,25,],[31,-15,-16,-17,]),'LLAVEIZQ':([30,],[33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'lista_declaraciones':([2,33,],[3,35,]),'declaracion':([2,3,33,35,],[4,14,4,14,]),'declaracion_variable':([2,3,33,35,],[5,5,5,5,]),'sentencia':([2,3,33,35,],[6,6,6,6,]),'sentencia_si':([2,3,33,35,],[9,9,9,9,]),'sentencia_ver':([2,3,33,35,],[10,10,10,10,]),'condicion':([17,],[21,]),'expresion':([17,31,],[22,34,]),'valor':([20,],[27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> INICIO lista_declaraciones FIN PUNTOYCOMA','programa',4,'p_programa','app2.py',59),
  ('lista_declaraciones -> lista_declaraciones declaracion','lista_declaraciones',2,'p_lista_declaraciones','app2.py',63),
  ('lista_declaraciones -> declaracion','lista_declaraciones',1,'p_lista_declaraciones','app2.py',64),
  ('declaracion -> declaracion_variable','declaracion',1,'p_declaracion','app2.py',71),
  ('declaracion -> sentencia','declaracion',1,'p_declaracion','app2.py',72),
  ('declaracion_variable -> CADENA ID IGUAL valor PUNTOYCOMA','declaracion_variable',5,'p_declaracion_variable','app2.py',76),
  ('sentencia -> PROCESO PUNTOYCOMA','sentencia',2,'p_sentencia','app2.py',86),
  ('sentencia -> sentencia_si','sentencia',1,'p_sentencia','app2.py',87),
  ('sentencia -> sentencia_ver','sentencia',1,'p_sentencia','app2.py',88),
  ('sentencia_si -> SI PARENIZQ condicion PARENDER LLAVEIZQ lista_declaraciones LLAVEDER','sentencia_si',7,'p_sentencia_si','app2.py',92),
  ('condicion -> expresion COMPARACION expresion','condicion',3,'p_condicion','app2.py',96),
  ('sentencia_ver -> VER CADENA_TEXTO PUNTOYCOMA','sentencia_ver',3,'p_sentencia_ver','app2.py',103),
  ('valor -> CADENA_TEXTO','valor',1,'p_valor','app2.py',107),
  ('valor -> NUMERO','valor',1,'p_valor','app2.py',108),
  ('expresion -> ID','expresion',1,'p_expresion','app2.py',112),
  ('expresion -> NUMERO','expresion',1,'p_expresion','app2.py',113),
  ('expresion -> CADENA_TEXTO','expresion',1,'p_expresion','app2.py',114),
]
